{"version":3,"sources":["components/Navbar.js","components/Textarea.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","titel","type","id","onClick","toggleMode","htmlFor","Textarea","useState","text","setText","style","color","placeholder","onChange","event","target","value","rows","backgroundColor","newText","toUpperCase","toLowerCase","splitStr","split","i","length","charAt","substring","join","navigator","clipboard","writeText","fontSize","filter","element","defaultProps","App","setMode","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.caa259c6.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default function Navbar(props) {\n  return (\n    <div>\n      <nav\n        className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\n      >\n        <div className=\"container-fluid\">\n          <a className=\"navbar-brand\" href=\"/\">\n            {props.titel}\n          </a>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-bs-toggle=\"collapse\"\n            data-bs-target=\"#navbarSupportedContent\"\n            aria-controls=\"navbarSupportedContent\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n              <li className=\"nav-item\">\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">\n                  Home\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">\n                  About\n                </a>\n              </li>\n            </ul>\n            <div\n              className={`form-check form-switch text-${\n                props.mode === \"light\" ? \"dark\" : \"light\"\n              }`}\n            >\n              <input\n                className=\"form-check-input\"\n                type=\"checkbox\"\n                id=\"flexSwitchCheckDefault\"\n                onClick={props.toggleMode}\n              />\n              <label\n                className=\"form-check-label\"\n                htmlFor=\"flexSwitchCheckDefault\"\n              >\n                {props.mode === \"light\" ? \"Enable\" : \"Disable\"} Dark mode\n              </label>\n            </div>\n          </div>\n        </div>\n      </nav>\n    </div>\n  );\n}\nNavbar.propTypes = {\n  titel: PropTypes.string,\n};\nNavbar.defaultProps = {\n  titel: \"Bhulla\",\n};\n","import React, { useState } from \"react\";\n\nexport default function Textarea(props) {\n  const [text, setText] = useState(\"\");\n\n  const onClick = () => {\n    let newText = text.toUpperCase();\n    setText(newText);\n  };\n  const onClickl = () => {\n    let newText = text.toLowerCase();\n    setText(newText);\n  };\n  // const onFlick = () => {\n  //   let newText = text;\n  //   //let a = newText.charAt(0);\n  //   newText = newText.charAt(0).toUpperCase() + newText.slice(1);\n  //   //console.log(newText[0].toUpperCase());\n  //   console.log(newText[0]);\n  //   for (let i = 1; i < newText.length; i++) {\n  //     //console.log(i);\n  //     //console.log(newText[i].toUpperCase());\n  //     if (newText[i] === \" \") {\n  //       newText = newText.charAt(0).toUpperCase() + newText.slice(1);\n  //       newText[i + 1].toUpperCase();\n  //     }\n  //   }\n  //   setText(newText);\n  // };\n\n  const onFlick = () => {\n    // let str = text;\n    var splitStr = text.toLowerCase().split(\" \");\n    for (var i = 0; i < splitStr.length; i++) {\n      splitStr[i] =\n        splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);\n    }\n    setText(splitStr.join(\" \"));\n  };\n\n  const onClear = () => {\n    setText(\"\");\n  };\n  const onChange = (event) => {\n    setText(event.target.value);\n  };\n\n  const onCopy = () => {\n    navigator.clipboard.writeText(text);\n  };\n\n  return (\n    <>\n      <div\n        className=\"container mt-5\"\n        style={{\n          color: props.mode === \"dark\" ? \"white\" : \"black\",\n        }}\n      >\n        <textarea\n          className=\"form-control\"\n          placeholder=\"Enter the text here\"\n          id=\"floatingTextarea\"\n          onChange={onChange}\n          value={text}\n          rows=\"14\"\n          style={{\n            backgroundColor: props.mode === \"dark\" ? \"gray\" : \"white\",\n            color: props.mode === \"dark\" ? \"white\" : \"black\",\n          }}\n        ></textarea>\n\n        <div className=\" d-md-block mt-3\">\n          <button\n            className=\"btn btn-primary me-2 my-1\"\n            onClick={onClick}\n            type=\"button\"\n          >\n            Convert to Uppercase\n          </button>\n          <button\n            className=\"btn btn-primary me-2 my-1\"\n            onClick={onClickl}\n            type=\"button\"\n          >\n            Convert to Lowercase\n          </button>\n          <button\n            className=\"btn btn-primary me-2 my-1\"\n            onClick={onFlick}\n            type=\"button\"\n          >\n            Convert to First letter to Uppercase\n          </button>\n          <button\n            className=\"btn btn-primary my-1\"\n            onClick={onClear}\n            type=\"button\"\n          >\n            Clear\n          </button>\n          <button\n            className=\"btn btn-primary my-1\"\n            onClick={onCopy}\n            type=\"button\"\n          >\n            Copy\n          </button>\n        </div>\n      </div>\n\n      <div\n        className=\"container my-3\"\n        style={{\n          color: props.mode === \"dark\" ? \"white\" : \"black\",\n        }}\n      >\n        <h2>Your Text Summary</h2>\n        <p>\n          <span style={{ fontSize: 25 }}>\n            {\n              text.split(/\\s+/).filter((element) => {\n                return element.length !== 0;\n              }).length\n            }\n          </span>{\" \"}\n          Words and <span style={{ fontSize: 25 }}>{text.length}</span>{\" \"}\n          Characters\n        </p>\n      </div>\n    </>\n  );\n}\n","import \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport Textarea from \"./components/Textarea\";\nimport React, { useState } from \"react\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#122f47\";\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n    }\n  };\n  return (\n    <>\n      <Navbar titel=\"Just Chlling\" mode={mode} toggleMode={toggleMode} />\n\n      <Textarea mode={mode} />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}